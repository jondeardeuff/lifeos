// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  firstName String
  lastName  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  tasks     Task[]
  tags      TaskTag[]
  
  @@map("users")
}

model Task {
  id          String      @id @default(cuid())
  title       String      @db.VarChar(500)
  description String?     @db.Text
  priority    Priority    @default(MEDIUM)
  status      TaskStatus  @default(PENDING)
  dueDate     DateTime?
  dueTime     String?
  timezone    String?
  metadata    Json?

  // Relationships
  userId      String
  user        User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  tags        TaskTag[]

  // Audit
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt

  // Indices for performant queries
  @@index([userId, status])
  @@index([userId, priority])
  @@index([userId, dueDate])
  @@index([title])

  @@map("tasks")
}

model TaskTag {
  id     String   @id @default(cuid())
  name   String   @db.VarChar(50)
  color  String   @default("#3B82F6")

  // Relationships
  userId String
  user   User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  tasks  Task[]

  @@unique([userId, name])
  @@index([userId])
  @@map("task_tags")
}

enum Priority {
  LOWEST
  LOW
  MEDIUM
  HIGH
  HIGHEST
}

enum TaskStatus {
  PENDING
  IN_PROGRESS
  COMPLETED
  CANCELLED
}
